WmDOT Version History
v.1, r.15, 2011-02-24
Copyright © 2011 by William Minchin. For more info, please visit
	http://openttd-noai-wmdot.googlecode.com/

	
r15	2011-02-24	Multiply DOT's running at the same time now run in a
					semi-cooperative fashion by building HQ in different cities
				HQInWhatTown(CompanyNo)
				TileIsWhatTown(TileIn)
r14	2011-02-19	Build out in zones (speed, quarter map, full map)
				Build out in steps (capital, connected towns)
				- combination moves up to six Modes	
v1				(to be released baased on r11, need to zip and add lisence)
r11	2011-02-18	Introduces Loan Management
				- requires SuperLib v6
				- keeps a minimum amount of money on hand
				- maxes out the loan to build any link and then pays it back
r5b	2011-02-18	Keeps track of already built connections
				Introduces 'Modes'
					Mode 1 tries to connect all the towns above the population threshold
					Mode 2 considers (and builds) alternate connections
					Mode 3 is 'nap' mode
				Seperated out GNU FDL code
				Clean up of Debug output
r4b	2011-02-17	r9 is uploaded to Google Code
r9	2011-02-12	Computes only half of the matrix (computational savings of 45% in test case)
				No more crashes upon building all the connects
r8	2011-02-11	This is the first version that 'works'. It selects a list of
					towns, weighs them based on distance and populaiton, and
					then builds connections. However, it can be VERY slow and
					crashes once everything is connected!
				Requires RoadPathfinder, v.3
				RemoveExistingConnections(WmAtlas)
				BuildRoad(path)
				- from NoAI Wiki
r7	2011-02-10	PickTowns()
				- picks the towns to connect (Trip Generation, Trip Distribution)
				NameWmDOT()
				- President now gets title of 'P.Eng'
r6	2011-02-09	BuildWmHQ()
				- picks biggest town and builds HQ
r4				GenerateAtlas()
r3				GenerateTownList()
				- uses cut-off population given in settings
				NameWmDOT()

Roadmap:
- improve 'remove existing routes' by limiting the search space to only road tiles
- move array functions to library
- improve route selection by estimating cost based on building cost rather than pure distance
- move to grid based route finding
	- generate 'gateways' for each town
	- do route finding one grid spacing at a 
- rewrite build path sequence so I can call it my own
- figure out how to get the version number to show up in Start()
- check the town centres are actually roads (use AIRoad::IsRoadTile() )
- add license file - http://opensource.org/licenses/qtpl ?
- generally impove the speed of the pathfinder
